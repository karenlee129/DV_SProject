stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="black"),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
"select color, clarity, avg_price,
avg(avg_price)
OVER (PARTITION BY clarity ) as window_avg_price
from (select color, clarity, avg(price) avg_price
from diamonds
group by color, clarity)
order by clarity;"
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select country, consumption_percentage, year
from globaleconomics
where year == 2009
;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_ryl96', PASS='orcl_ryl96', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
df$COUNTRY <- factor(df$COUNTRY, levels = df$COUNTRY[order(desc(df$CONSUMPTION_PERCENTAGE))])
ggplot() +
geom_bar() +
coord_flip() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Consumption Percentage per Country in 2009') +
labs(x=paste("Country"), y=paste("Consumption Percentage")) +
layer(data=df,
mapping=aes(x=COUNTRY, y=CONSUMPTION_PERCENTAGE, label=CONSUMPTION_PERCENTAGE),
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="black"),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
"select color, clarity, avg_price,
avg(avg_price)
OVER (PARTITION BY clarity ) as window_avg_price
from (select color, clarity, avg(price) avg_price
from diamonds
group by color, clarity)
order by clarity;"
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select country, consumption_percentage, year
from globaleconomics
where year == 2009
;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_ryl96', PASS='orcl_ryl96', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
df$COUNTRY <- factor(df$COUNTRY, levels = df$COUNTRY[order(desc(df$CONSUMPTION_PERCENTAGE))])
ggplot() +
geom_bar() +
coord_flip() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Consumption Percentage per Country in 2009') +
labs(x=paste("Country"), y=paste("Consumption Percentage")) +
layer(data=df,
mapping=aes(x=COUNTRY, y=CONSUMPTION_PERCENTAGE, label=CONSUMPTION_PERCENTAGE),
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="black"),
position=position_identity()
)
source('C:/Users/Karen/Dropbox/Fall \'15/VS329E data visualization/DV_TProject1/DV_TProject1/01 Data/barchart.R')
# The following is equivalent to Windowing Story 5 Sheet 4 in "Crosstabs, KPIs, Barchart.twb"
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select color, clarity, avg_price,
avg(avg_price)
OVER (PARTITION BY clarity ) as window_avg_price
from (select color, clarity, avg(price) avg_price
from diamonds
group by color, clarity)
order by clarity;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)
# df <- diamonds %>% group_by(color, clarity) %>% summarize(AVG_PRICE = mean(price)) %>% rename(COLOR=color, CLARITY=clarity)
# df1 <- df %>% ungroup %>% group_by(CLARITY) %>% summarize(WINDOW_AVG_PRICE=mean(AVG_PRICE))
# df <- inner_join(df, df1, by="CLARITY")
spread(df, COLOR, AVG_PRICE) %>% View
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
facet_wrap(~CLARITY, ncol=1) +
labs(title='Diamonds Barchart\nAVERAGE_PRICE, WINDOW_AVG_PRICE, ') +
labs(x=paste("COLOR"), y=paste("AVG_PRICE")) +
layer(data=df,
mapping=aes(x=COLOR, y=AVG_PRICE),
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="blue"),
position=position_identity()
) + coord_flip() +
layer(data=df,
mapping=aes(x=COLOR, y=AVG_PRICE, label=round(AVG_PRICE)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-0.5),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=AVG_PRICE, label=round(WINDOW_AVG_PRICE)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-2),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=COLOR, y=AVG_PRICE, label=round(AVG_PRICE - WINDOW_AVG_PRICE)),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(colour="black", hjust=-5),
position=position_identity()
) +
layer(data=df,
mapping=aes(yintercept = WINDOW_AVG_PRICE),
geom="hline",
geom_params=list(colour="red")
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select POP, REAL_GDP, YEAR, COUNTRY
from globaleconomics
where REAL_GDP is not NULL
;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_ryl96', PASS='orcl_ryl96', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
df<-dplyr::filter(df, POP < 266859)
View(df)
ggplot() +
geom_point() +
labs(title='Real GDP Versus Population') +
labs(x=paste("Pop"), y=paste("Real GDP")) +
layer(data=df,
mapping=aes(x=POP, y=REAL_GDP, color=YEAR, label=COUNTRY),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=POP, y=REAL_GDP, color=YEAR, label=COUNTRY),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(),
position=position_identity(),
)
source('C:/Users/Karen/Dropbox/Fall \'15/VS329E data visualization/DV_TProject1/DV_TProject1/01 Data/DV_TProject2.R')
source('C:/Users/Karen/Dropbox/Fall \'15/VS329E data visualization/DV_TProject1/DV_TProject1/01 Data/DV_TProject2.R')
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select POP, REAL_GDP, YEAR, COUNTRY
from globaleconomics
where REAL_GDP is not NULL
;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_ryl96', PASS='orcl_ryl96', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
df<-dplyr::filter(df, POP < 266859)
View(df)
ggplot() +
geom_point() +
labs(title='Real GDP Versus Population') +
labs(x=paste("Pop"), y=paste("Real GDP")) +
layer(data=df,
mapping=aes(x=POP, y=REAL_GDP, color=YEAR, label=COUNTRY),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
layer(data=df,
mapping=aes(x=POP, y=REAL_GDP, color=YEAR, label=COUNTRY),
stat="identity",
stat_params=list(),
geom="text",
geom_params=list(),
position=position_identity(),
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
"select color, clarity, avg_price,
avg(avg_price)
OVER (PARTITION BY clarity ) as window_avg_price
from (select color, clarity, avg(price) avg_price
from diamonds
group by color, clarity)
order by clarity;"
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select country, consumption_percentage, year
from globaleconomics
where year == 2009
;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_ryl96', PASS='orcl_ryl96', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
df$COUNTRY <- factor(df$COUNTRY, levels = df$COUNTRY[order(desc(df$CONSUMPTION_PERCENTAGE))])
ggplot() +
geom_bar() +
coord_flip() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Consumption Percentage per Country in 2009') +
labs(x=paste("Country"), y=paste("Consumption Percentage")) +
layer(data=df,
mapping=aes(x=COUNTRY, y=CONSUMPTION_PERCENTAGE, label=CONSUMPTION_PERCENTAGE),
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="black"),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select country, consumption_percentage, year
from globaleconomics
where year == 2009
;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_ryl96', PASS='orcl_ryl96', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
df$COUNTRY <- factor(df$COUNTRY, levels = df$COUNTRY[order(desc(df$CONSUMPTION_PERCENTAGE))])
ggplot() +
geom_bar() +
coord_flip() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Consumption Percentage per Country in 2009') +
labs(x=paste("Country"), y=paste("Consumption Percentage")) +
layer(data=df,
mapping=aes(x=COUNTRY, y=CONSUMPTION_PERCENTAGE, label=CONSUMPTION_PERCENTAGE),
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="black"),
position=position_identity()
)
require("jsonlite")
require("RCurl")
require(ggplot2)
require(dplyr)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", 'skipper.cs.utexas.edu:5001/rest/native/?query=
"select country, CONSUMPTION_PERCENTAGE, year
from globaleconomics
where year == 2009
;"
')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_ryl96', PASS='orcl_ryl96', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
df$COUNTRY <- factor(df$COUNTRY, levels = df$COUNTRY[order(desc(df$CONSUMPTION_PERCENTAGE))])
ggplot() +
geom_bar() +
coord_flip() +
scale_x_discrete() +
scale_y_discrete() +
labs(title='Consumption Percentage per Country in 2009') +
labs(x=paste("Country"), y=paste("Consumption Percentage")) +
layer(data=df,
mapping=aes(x=COUNTRY, y=CONSUMPTION_PERCENTAGE, label=CONSUMPTION_PERCENTAGE),
stat="identity",
stat_params=list(),
geom="bar",
geom_params=list(colour="black"),
position=position_identity()
)
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("shiny")
library("stringi")
library("PKI")
library("packrat")
library("rstudioapi")
library("rsconnect")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("shiny")
library("stringi")
library("PKI")
library("packrat")
library("rstudioapi")
library("rsconnect")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("shiny")
library("stringi")
library("PKI")
library("packrat")
library("rstudioapi")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("ggplot2")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("shiny")
library("stringi")
library("PKI")
library("packrat")
library("rstudioapi")
library("rsconnect")
shiny::runApp('C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/DrCannata/RWorkshop/09Shiny')
shiny::runApp('C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/DrCannata/RWorkshop/09Shiny')
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("shiny")
library("stringi")
library("PKI")
library("packrat")
library("rstudioapi")
library("rsconnect")
shiny::runApp('C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/DrCannata/RWorkshop/09 Shiny/03Dashboard')
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("shiny")
library("stringi")
library("PKI")
library("packrat")
library("rstudioapi")
library("rsconnect")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
source('C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/DrCannata/.Rprofile')
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
library("shiny", lib.loc="C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/R-3.2.2/library")
install.packages("leaflet")
install.packages("shinydashboard")
install.packages("leaflet")
library("leaflet", lib.loc="C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/R-3.2.2/library")
library("shiny", lib.loc="C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/R-3.2.2/library")
library("shinydashboard", lib.loc="C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/R-3.2.2/library")
shiny::runApp('C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/DrCannata/RWorkshop/09 Shiny/03Dashboard')
shiny::runApp('C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/DrCannata/RWorkshop/09 Shiny/03Dashboard')
library("ggplot2")
library("ggthemes")
library("gplots")
library("grid")
library("RCurl")
library("reshape2")
library("tableplot")
library("tidyr")
library("dplyr")
library("jsonlite")
library("extrafont")
library("lubridate")
shiny::runApp('C:/Users/Karen/Dropbox/Fall2015/VS329E data visualization/DV_SProject/01 Data')
